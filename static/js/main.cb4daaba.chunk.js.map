{"version":3,"sources":["reportWebVitals.js","Card.js","CardList.js","Scroll.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","props","name","email","id","className","src","alt","CardList","robots","map","card","i","Scroll","style","overflowY","border","height","children","App","OnSearch","event","setState","search","target","value","state","fetch","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","placeholder","onChange","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yKAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,mCCQCQ,EAbF,SAACC,GAAW,IACdC,EAAmBD,EAAnBC,KAAMC,EAAaF,EAAbE,MAAOC,EAAMH,EAANG,GACpB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAA1B,YAAwCG,IAAI,UACpD,gCACI,mCAAML,EAAN,OACA,8BAAIC,EAAJ,cCSDK,EAfE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACf,OACC,8BAEIA,EAAOC,KAAI,SAACC,EAAKC,GACd,OACI,cAAC,EAAD,CAAcR,GAAIK,EAAOG,GAAGR,GAAIF,KAAMO,EAAOG,GAAGV,KAAMC,MAAOM,EAAOG,GAAGT,OAA5DS,SCCZC,EARA,SAACZ,GACZ,OACI,qBAAKa,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAO,SAApE,SACKhB,EAAMiB,YCqCJC,E,kDArCX,aAAc,IAAD,8BACT,gBAeJC,SAAW,SAACC,GACT,EAAKC,SAAS,CAACC,OAAQF,EAAMG,OAAOC,SAfnC,EAAKC,MAAQ,CACTjB,OAAS,GACTc,OAAS,IAJJ,E,qDAQb,WAAoB,IAAD,OACfI,MAAM,8CAA8CjC,MAAK,SAAAkC,GACrD,OAAOA,EAASC,UACjBnC,MAAK,SAAAoC,GACJ,EAAKR,SAAS,CAACb,OAASqB,S,oBAQhC,WAAS,IAAD,OACEC,EAAiBC,KAAKN,MAAMjB,OAAOwB,QAAO,SAAAC,GAC5C,OAAOA,EAAMhC,KAAKiC,cAAcC,SAAS,EAAKV,MAAMH,OAAOY,kBAE/D,OACI,sBAAK9B,UAAU,KAAf,UACI,8CACA,uBAAOgC,YAAY,eAAehC,UAAU,MAAMiC,SAAUN,KAAKZ,WACjE,cAAC,EAAD,UACI,cAAC,EAAD,CAAUX,OAAQsB,a,GA9BpBQ,IAAMC,WCExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BtD,M","file":"static/js/main.cb4daaba.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst Card = (props) => {\r\n    const {name, email, id} = props\r\n    return(\r\n        <div className=\"bg-light-green br3 dib pa3 ma2 grow bw2 shadow-5 tc\"> \r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"robo1\"/>\r\n            <div>\r\n                <h2> {name} </h2>\r\n                <p>{email} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;\r\n\r\n","import React from 'react'\r\nimport Card from \"./Card\"\r\n\r\nconst CardList = ({robots}) =>{\r\n    return(\r\n     <div>\r\n        {\r\n         robots.map((card,i) => {\r\n            return (\r\n                <Card key={i} id={robots[i].id} name={robots[i].name} email={robots[i].email}/>\r\n            )\r\n            \r\n        })\r\n        }\r\n     </div>\r\n    )\r\n}\r\n\r\nexport default CardList; ","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflowY: 'scroll', border: '1px solid brown', height:'700px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","import React from 'react'\r\nimport CardList from './CardList';\r\nimport Scroll from './Scroll';\r\n\r\nclass App extends React.Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots : [],\r\n            search : ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(response =>{\r\n            return response.json()\r\n        }).then(users =>{\r\n            this.setState({robots : users})\r\n        })\r\n    }\r\n\r\n    OnSearch = (event) =>{\r\n       this.setState({search: event.target.value})\r\n    }\r\n\r\n    render(){\r\n        const filteredRobots = this.state.robots.filter(robot =>{\r\n            return robot.name.toLowerCase().includes(this.state.search.toLowerCase())\r\n        })\r\n        return(\r\n            <div className=\"tc\">\r\n                <h1> RoboFriends</h1>\r\n                <input placeholder=\"search robot\" className=\"ma2\" onChange={this.OnSearch}/>\r\n                <Scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                </Scroll>\r\n            </div>\r\n        )\r\n    }\r\n \r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from \"./App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}